def Recursion():
    import random
    #Imports file random.py

    level = random.randint(1, 10)
    print("Level: ", level)
    #Displays a random whole integer between 1-10

    if level <= 4:
        law = random.sample({"Standard Physics", "Magic", "Mad Science", "Substandard Physics", "Psionics"}, 1)
        print("Law: ", law)
    else:
        law = random.sample({"Standard Physics", "Magic", "Mad Science", "Substandard Physics", "Psionics", "Exotic Physics"}, 1)
        print("Law: ", law)
    #Displays a random physical law. If lower than level 5 will never display "Exotic Physics". Credit Eric Vail (syntax help)

    if level <= 4:
        print("Playable Races: Human")
    else:
        randomize1 = random.randint(1, 100)
        if randomize1 >= 90:
            specrace = random.sample({"Human", "Qephilim", "Vampire", "Werewolf", "Sacrosanct", "Talking Animals"}, random.randint(1, 2))
            print("Playable Races: ", specrace)
        else:
            print("Playable Races: Human")
    #Displays random playable race. Level 4 and lower can only display Human, while there is a 10% chance of something else if 5 or higher

    if level <= 4:
        print("Foci: None")
    else:
        foci = random.sample({"Feeds the Flame", "Follows Psychic Clues", "Forges Animal Bonds", "Harnesses the Body's Rythyms", "Haunts Dreams", "Is the Eye of the Storm", "Knows the Heart", "Leaves the Physical World", "Preys on the Psyche", "Sees with the Inner Eye", "Toys with Memory", "Wields Invisible Forces", "Delves Too Deep", "Has More Money Than Sense", "Investigates Strange Events", "Joined a Cult", "Sees the End", "Displays Titan Strength", "Fights Like a Demigod", "Inspires Lust and Jealousy", "Journeys Beyond this World", "Outwits the Gods", "Dies", "Explores New Worlds", "Fires All Weapons", "Pilots Starships", "Rerouts Power", "Bleeds Fiction", "Discovers Recursions", "Mines for Cyphers", "Thrives in Chaos", "Thwarts Planetovores", "Carries a Badge", "Draws Faster", "Fights Dirty", "Knows These Parts", "Rides into the Sunset", "Carries the Weight of Destiny", "Changes Shape", "Channels the Elements", "Charms the Unwary", "Commands Armies", "Communes with Nature", "Consorts with Dragons", "Follows the Old Ways", "Inscribes Runes of Power", "Practices Sorcery", "Speaks of Forgotten Gods", "Tends a Flock", "Adopts Animal Qualities", "Assists a Mad Genius", "Brandishes a Death Ray", "Builds Robots", "Conducts Dangerous Experiments", "Controls the Weather", "Defies the Laws of Physics", "Develops Sentience", "Dons a Power Suit", "Employs Fantastic Gadgets", "Mixes Unstable Elements", "Plays with Portals", "Pursues Physical Perfection", "Terrifies the Townspeople", "Wields Cosmic Power", "Drives Dangerously", "Feeds the Flame", "Employs Sex Apeal", "Fights for a Cause", "Finds Lost Relics", "Hunts Strange Beasts", "Imparts Wisdom", "Just Won't Die", "Knows the Streets", "Lives on the Edge", "Masters Technology", "Monitors Intel", "Changes the Nature of Things", "Chills with a Touch", "Constructs a Palace of the Mind", "Plays Tricks", "Saves Lives", "Scores Points", "Speaks Every Language", "Abides in Stone", "Awakens Dangerous Psychic Talent", "Carries a Quiver", "Channels Sinfire", "Conducts Weird Science", "Embraces Native Ancestry", "Entertains", "Infiltrates", "Integrates Weaponry", "Is Licensed to Carry", "Leads", "Lives in the Wilderness", "Looks for Trouble", "Metamorphosizes", "Operates Undercover", "Practices Soul Sorcery", "Processes Information", "Regenerates Tissue", "Sheperds the Dead", "Slays Dragons", "Solves Mysteries", "Spawns", "Translates(Special Focus)", "Wields Two Weapons At Once", "Works Miracles", "Works the System", "Carries the Burden of Knowledge", "Counts Coins", "Defends the Realm", "Dines with Kings", "Enforces Divine Will", "Follows their Feet", "Forged Arms and Armor", "Hunts Dangerous Beasts", "Indulges in Worldly Pleasures", "Knows the Hidden Paths", "Protects the Weak", "Rides a Noble Steed", "Rules with an Iron Fist", "Speaks with a Silver Tongue", "Steals from the Rich", "Bears a Holy Symbol", "Binds Spirits", "Braves Dungeons"}, (random.randint(2, 6)))
        print("Foci: ", foci)
    #Picks a random integer from 3-9 and displays that many foci randomly from those provided. Recursion level 4 and lower do not have unique foci.

    randomize2 = random.randint(1,100)
    #Generates random integer between 1 and 100
    if randomize2 <= 50:
        logicskill = 1
    else:
        if randomize2 <= 75:
            logicskill = 2
        else:
            if randomize2 <= 100:
                logicskill = 3
    #Displays random skill. It's much more likely to get 1 skill instead of 2 or 3.

    skills = random.sample({"Astronomy", "Balancing", "Biology", "Botany", "Carrying", "Climbing", "Deceiving", "Escaping", "Geography", "Geology", "Healing", "History", "Identifying", "Initiative", "Intimidation", "Jumping", "Leatherworking", "Lockpicking", "The Strange", "Metalworking", "Perception", "Persuasion", "Philosophy", "Pickpocketing", "Repairing", "Riding", "Smashing", "Sneaking", "Swimming", "Woodworking"}, logicskill)
    print("Skills: ", skills)
    #Displays random skill(s). 50% chance of 1 skill, and 25% chance each for 2 and 3 skills being displayed.

    randomize3= random.randint(1,1000)
    #Generates a random integer between 1 and 1000
    if randomize3 >= 900:
        print("Age and Size: Ascendant Recursion")
    else:
        if level <= 1:
            print("Age and Size: Pocket Dimension")
        else:
            if level <= 2:
                print("Age and Size: Young Recursion")
            else:
                if level <= 4:
                    print("Age and Size: Juvenile Recursion")
                else:
                    if level <= 7:
                        print("Age and Size: Developed Recursion")
                    else:
                        if level <= 10:
                            print("Age and Size: Old Recursion")
    #Displays age and size depending on recursion level. 1/100 chance of recursion being Ascendant independent of level

    if level <= 1:
        spark1 = random.randrange(0, 21, 2)
        print("Spark: ", spark1, "%")
    else:
        if level <= 2:
            spark2 = random.randrange(0, 41, 2)
            print("Spark: ", spark2, "%")
        else:
            if level <= 4:
                spark3 = random.randrange(0, 61, 2)
                print("Spark: ", spark3, "%")
            else:
                if level <= 7:
                    spark4 = random.randrange(0, 81, 2)
                    print("Spark: ", spark4, "%")
                else:
                    if level <= 10:
                        spark5 = random.randrange(0, 101, 2)
                        print("Spark: ", spark5, "%")
    #Displays percentage of inhabitants with the spark, based on recursion level.

    trait = random.sample({"Appealing", "Brash", "Clever", "Fast", "Graceful", "Intelligent", "Lucky", "Sharp-Eyed", "Skeptical", "Stealthy", "Strange", "Strong", "Tough", "Strong-Willed", "Learned", "Rugged", "Craven", "Cruel", "Doomed", "Clumsy", "Dishonorable", "Driven", "Empathic", "Exiled", "Foolish", "Guarded", "Hardy", "Hideous", "Honorable", "Impulsive", "Inquisitive", "Mad", "Naive", "Noble", "Perceptive", "Tongue-Tied", "Vengeful", "Weird"}, 1)
    print("Trait: ", trait)
    #Picks one random trait from a list of descriptors
Recursion()
